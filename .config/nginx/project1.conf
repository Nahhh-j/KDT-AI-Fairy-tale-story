server {
    listen 80;
    server_name *.compute-1.amazonaws.com myfairytale.link;
    charset utf-8;
    client_max_body_size 128M;

    location / {
        uwsgi_pass  unix:///tmp/project1.sock;
        include     uwsgi_params;

        # 추가: uWSGI 프로세스가 사용하는 사용자에게 권한을 부여합니다.
        uwsgi_modifier1 30;
    }

    location /static/ {
        alias /srv/imageftProject/static/;
    }

    # 추가: '/dev/video0'에 대한 권한을 부여합니다.
    location /game/ {
        proxy_pass http://127.0.0.1:8000;  # Django 애플리케이션이 동작하는 포트로 변경하세요.
    }
}

server {
    listen 443 ssl;
    server_name *.compute-1.amazonaws.com myfairytale.link;
    charset utf-8;
    client_max_body_size 128M;

    ssl_certificate /etc/letsencrypt/live/myfairytale.link/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/myfairytale.link/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    location / {
        uwsgi_pass  unix:///tmp/project1.sock;
        include     uwsgi_params;

        # 추가: uWSGI 프로세스가 사용하는 사용자에게 권한을 부여합니다.
        uwsgi_modifier1 30;
    }

    location /static/ {
        alias /srv/imageftProject/static/;
    }

    # 추가: '/dev/video0'에 대한 권한을 부여합니다.
    location /game/ {
        proxy_pass http://127.0.0.1:8000;  # Django 애플리케이션이 동작하는 포트로 변경하세요.
    }
}